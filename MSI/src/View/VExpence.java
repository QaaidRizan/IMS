/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.CExpense;
import Model.MDBConnection;
import java.sql.PreparedStatement;
import java.sql.*;
import javax.swing.JOptionPane;
import java.sql.*;
import java.time.LocalDate;
import java.time.temporal.TemporalAdjusters;
import javax.swing.*;

/**
 *
 * @author USER
 */
public class VExpence extends javax.swing.JFrame {

    /**
     * Creates new form VExpence
     */
    public VExpence() {
     
        initComponents();
        id_autoincrement();
         j_date.setDate(new java.util.Date());
    }
   public void calculateTotalExpenses() {
    String selectedDateRange = com_date.getSelectedItem().toString();
    String query = "";

    // Build query based on selected date range
    switch (selectedDateRange) {
        case "Today" -> query = "SELECT SUM(Amount) AS Total FROM expense WHERE DATE(Date) = CURDATE()";
        case "This Week" -> query = "SELECT SUM(Amount) AS Total FROM expense WHERE YEARWEEK(Date, 1) = YEARWEEK(CURDATE(), 1)";
        case "This Month" -> query = "SELECT SUM(Amount) AS Total FROM expense WHERE MONTH(Date) = MONTH(CURDATE()) AND YEAR(Date) = YEAR(CURDATE())";
        default -> {
            JOptionPane.showMessageDialog(null, "Invalid selection", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            }
    }

    // Execute query and update UI
    try (Connection con = MDBConnection.createConnection();
         PreparedStatement pst = con.prepareStatement(query);
         ResultSet rs = pst.executeQuery()) {
        
        if (rs.next()) {
            int totalExpense = rs.getInt("Total");
            txt_totalexpence.setText(String.valueOf(totalExpense));
        } else {
            txt_totalexpence.setText("0");
            JOptionPane.showMessageDialog(null, "No expenses found for the selected date range", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }


}
  
    
     public void id_autoincrement(){
        
      try {
        var conn = MDBConnection.createConnection();
        String sql = "SELECT MAX(ExpenseID) FROM Expense";
        PreparedStatement pst = conn.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();
        
        int nextId = 1;  // Default ID if no records are found
        
        if (rs.next()) {
            int maxId = rs.getInt(1);
            nextId = maxId + 1;
        }
        
        // Set the nextId value to the txt_productid text field
        txt_expence.setText(String.valueOf(nextId));

        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
    
    }
     }
     
     public void clearField(){
     
    j_date.setDate(null);
    txt_discription.setText("");
    txt_amount.setText(null);
     
     
     
     
     
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_Add = new javax.swing.JButton();
        btn_Update = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_membername = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_expence = new javax.swing.JTextField();
        txt_discription = new javax.swing.JTextField();
        txt_amount = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        j_date = new com.toedter.calendar.JDateChooser();
        com_date = new javax.swing.JComboBox<>();
        txt_totalexpence = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cashier Dashboard");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(51, 204, 255));
        jPanel1.setLayout(null);

        btn_Add.setBackground(new java.awt.Color(0, 153, 153));
        btn_Add.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_Add.setForeground(new java.awt.Color(255, 255, 255));
        btn_Add.setText("Add");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Add);
        btn_Add.setBounds(400, 540, 90, 31);

        btn_Update.setBackground(new java.awt.Color(0, 153, 153));
        btn_Update.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_Update.setForeground(new java.awt.Color(255, 255, 255));
        btn_Update.setText("Update");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Update);
        btn_Update.setBounds(540, 540, 90, 31);

        btn_Delete.setBackground(new java.awt.Color(0, 153, 153));
        btn_Delete.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_Delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_Delete.setText("Delete");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Delete);
        btn_Delete.setBounds(670, 540, 80, 31);

        btn_clear.setBackground(new java.awt.Color(0, 153, 153));
        btn_clear.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_clear.setForeground(new java.awt.Color(255, 255, 255));
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        jPanel1.add(btn_clear);
        btn_clear.setBounds(800, 540, 76, 31);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("ExpenceID");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(450, 117, 123, 28);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Date");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(450, 169, 95, 20);

        txt_membername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_membername.setText("Description");
        jPanel1.add(txt_membername);
        txt_membername.setBounds(450, 231, 84, 20);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Total Expenses");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(600, 410, 130, 30);

        txt_expence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_expenceActionPerformed(evt);
            }
        });
        jPanel1.add(txt_expence);
        txt_expence.setBounds(579, 119, 228, 26);

        txt_discription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_discriptionActionPerformed(evt);
            }
        });
        jPanel1.add(txt_discription);
        txt_discription.setBounds(579, 231, 236, 102);

        txt_amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_amountActionPerformed(evt);
            }
        });
        jPanel1.add(txt_amount);
        txt_amount.setBounds(579, 351, 236, 26);

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setPreferredSize(new java.awt.Dimension(301, 337));

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Documents\\NetBeansProjects\\Ims2\\MSI\\src\\Images\\ex.png")); // NOI18N

        jButton3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(100, 100, 100)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(164, 164, 164))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 0, 314, 620);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel8.setText("Expences");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(603, 38, 95, 30);
        jPanel1.add(j_date);
        j_date.setBounds(579, 163, 236, 26);

        com_date.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Today", "This Week", "This Month", " " }));
        com_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                com_dateActionPerformed(evt);
            }
        });
        jPanel1.add(com_date);
        com_date.setBounds(440, 470, 96, 26);

        txt_totalexpence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalexpenceActionPerformed(evt);
            }
        });
        jPanel1.add(txt_totalexpence);
        txt_totalexpence.setBounds(580, 470, 230, 26);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Amount");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(450, 353, 77, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(974, 615));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_amountActionPerformed

    private void txt_discriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_discriptionActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_txt_discriptionActionPerformed

    private void txt_expenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_expenceActionPerformed

        int expenxeid =Integer.parseInt(txt_expence.getText());
        if (expenxeid==0) {
            JOptionPane.showMessageDialog(null, "Please enter the supplier ID to view details");
            return;
        }

        try {
            Connection conn = MDBConnection.createConnection();
            String sql = "SELECT Date,Description,Amount FROM Expense WHERE ExpenseID = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, expenxeid);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                // Assuming these text fields are defined and used for displaying member details

               j_date.setDate(rs.getDate("Date"));
               txt_discription.setText(rs.getString("Description"));
                int amount = rs.getInt("Amount");
                txt_amount.setText(String.valueOf(amount));
                
                

            } else {
                JOptionPane.showMessageDialog(null, "Expense ID not found");
            }

            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error retrieving Expense details: " + e.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_expenceActionPerformed

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
  // Validate fields
    if (txt_discription.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Description cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if (txt_amount.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Amount cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    try {
        Integer.parseInt(txt_amount.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Amount must be a valid number.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    java.util.Date date = j_date.getDate();
    if (date == null) {
        JOptionPane.showMessageDialog(null, "Date cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Proceed with adding expense
    java.sql.Date sqlDate = new java.sql.Date(date.getTime());
    String description = txt_discription.getText().trim();
    int amount = Integer.parseInt(txt_amount.getText().trim());
    
    CExpense ex = new CExpense();
    ex.addExpense(sqlDate, description, amount);

    id_autoincrement();
    clearField();
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_AddActionPerformed

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        if (txt_expence.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Expense ID cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    int expenseid;
    try {
        expenseid = Integer.parseInt(txt_expence.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Expense ID must be a valid number.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    if (txt_discription.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Description cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if (txt_amount.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Amount cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    try {
        Integer.parseInt(txt_amount.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Amount must be a valid number.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    java.util.Date date = j_date.getDate();
    if (date == null) {
        JOptionPane.showMessageDialog(null, "Date cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Proceed with updating expense
    java.sql.Date sqlDate = new java.sql.Date(date.getTime());
    String description = txt_discription.getText().trim();
    int amount = Integer.parseInt(txt_amount.getText().trim());

    CExpense ex = new CExpense();
    ex.updateExpense(expenseid, sqlDate, description, amount);

    id_autoincrement();
    clearField();

        // TODO add your handling code here:
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
  if (txt_expence.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Expense ID cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    int expenseid;
    try {
        expenseid = Integer.parseInt(txt_expence.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Expense ID must be a valid number.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Proceed with deleting expense
    CExpense ex = new CExpense();
    ex.deleteExpense(expenseid);

    clearField();
    id_autoincrement();

        // TODO add your handling code here:
    }//GEN-LAST:event_btn_DeleteActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        clearField();
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_clearActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false);
        VHrDashboard pm=new VHrDashboard();
        pm.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txt_totalexpenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalexpenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalexpenceActionPerformed

    private void com_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_com_dateActionPerformed
        calculateTotalExpenses();
        // TODO add your handling code here:
    }//GEN-LAST:event_com_dateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VExpence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VExpence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VExpence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VExpence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VExpence().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Update;
    private javax.swing.JButton btn_clear;
    private javax.swing.JComboBox<String> com_date;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private com.toedter.calendar.JDateChooser j_date;
    private javax.swing.JTextField txt_amount;
    private javax.swing.JTextField txt_discription;
    private javax.swing.JTextField txt_expence;
    private javax.swing.JLabel txt_membername;
    private javax.swing.JTextField txt_totalexpence;
    // End of variables declaration//GEN-END:variables
}

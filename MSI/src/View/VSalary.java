/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.CSalary;
import Model.MDBConnection;
import java.sql.PreparedStatement;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class VSalary extends javax.swing.JFrame {

    /**
     * Creates new form VSalary
     */
    public VSalary() {
        initComponents();
        id_autoincrement();
         j_date.setDate(new java.util.Date());
    }

     private void id_autoincrement(){
        
      try {
        var conn = MDBConnection.createConnection();
        String sql = "SELECT MAX(SalaryID) FROM Salary";
        PreparedStatement pst = conn.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();
        
        int nextId = 1;  // Default ID if no records are found
        
        if (rs.next()) {
            int maxId = rs.getInt(1);
            nextId = maxId + 1;
        }
        
        // Set the nextId value to the txt_productid text field
        txt_salaryid.setText(String.valueOf(nextId));

        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }

       private void clearFields() {
    txt_bsalary.setText("");      // Clear Salary field
    txt_allowance.setText("");    // Clear Allowance field
    txt_employid.setText(""); 
    txt_employname.setText("");    // Clear EmployeeID field
    j_date.setDate(null); 
    txt_total.setText("");
    // Clear Date field in JDateChooser
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_Add = new javax.swing.JButton();
        btn_Update = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_membername = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_salaryid = new javax.swing.JTextField();
        j_date = new com.toedter.calendar.JDateChooser();
        txt_bsalary = new javax.swing.JTextField();
        txt_allowance = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_employid = new javax.swing.JTextField();
        txt_employname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Request Leave");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(51, 204, 255));

        btn_Add.setBackground(new java.awt.Color(0, 153, 153));
        btn_Add.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_Add.setForeground(new java.awt.Color(255, 255, 255));
        btn_Add.setText("Add");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        btn_Update.setBackground(new java.awt.Color(0, 153, 153));
        btn_Update.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_Update.setForeground(new java.awt.Color(255, 255, 255));
        btn_Update.setText("Update");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });

        btn_Delete.setBackground(new java.awt.Color(0, 153, 153));
        btn_Delete.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_Delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_Delete.setText("Delete");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        btn_clear.setBackground(new java.awt.Color(0, 153, 153));
        btn_clear.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btn_clear.setForeground(new java.awt.Color(255, 255, 255));
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Salary ID");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Salary_Date ");

        txt_membername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_membername.setText("Basic Salary");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Allowance");

        txt_salaryid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_salaryidActionPerformed(evt);
            }
        });

        txt_bsalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bsalaryActionPerformed(evt);
            }
        });

        txt_allowance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_allowanceActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Employe ID");

        txt_employid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_employidActionPerformed(evt);
            }
        });

        txt_employname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_employnameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Employe Name");

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setPreferredSize(new java.awt.Dimension(301, 337));

        jLabel10.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Documents\\NetBeansProjects\\Ims2\\MSI\\src\\Images\\salry.png")); // NOI18N

        jButton3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel11.setText("Salary");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Total");

        txt_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_bsalary, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(36, 36, 36)
                                    .addComponent(txt_salaryid, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(j_date, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel4)
                                        .addComponent(txt_membername)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(txt_employname, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(txt_allowance, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txt_employid, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_Add)
                                .addGap(37, 37, 37)
                                .addComponent(btn_Update)
                                .addGap(36, 36, 36)
                                .addComponent(btn_Delete)
                                .addGap(37, 37, 37)
                                .addComponent(btn_clear)
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(212, 212, 212))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel11)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_salaryid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addComponent(j_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_employid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_employname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_bsalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_membername))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_allowance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_clear)
                    .addComponent(btn_Delete)
                    .addComponent(btn_Update)
                    .addComponent(btn_Add))
                .addGap(119, 119, 119))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed

        id_autoincrement();

         try {
        java.util.Date utilDate = j_date.getDate(); // Get the date from the JDateChooser
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime()); // Convert util.Date to sql.Date
        int salary = Integer.parseInt(txt_bsalary.getText()); // Get basic salary
        int allowance = Integer.parseInt(txt_allowance.getText()); // Get allowance
        int employeeId = Integer.parseInt(txt_employid.getText()); // Get EmployeeID

        // Calculate total (Salary + Allowance)
        int total = salary + allowance;

        // Connection and PreparedStatement to insert data into the Salary table
        Connection con = null;
        PreparedStatement pst = null;

        try {
            // Create a connection
            con = MDBConnection.createConnection();

            // SQL query to insert data into the Salary table
            String sql = "INSERT INTO Salary (SalaryDate, Salary, Allowance, EmployeeID, Total) VALUES (?, ?, ?, ?, ?)";

            // Prepare the SQL statement
            pst = con.prepareStatement(sql);

            // Set the values in the query
            pst.setDate(1, sqlDate);          // SalaryDate
            pst.setInt(2, salary);            // Salary
            pst.setInt(3, allowance);         // Allowance
            pst.setInt(4, employeeId);        // EmployeeID (Foreign key from Employee table)
            pst.setInt(5, total);             // Total (Salary + Allowance)

            // Execute the query
            pst.executeUpdate();

            // Show success message
            JOptionPane.showMessageDialog(null, "Salary record added successfully!");

            // Optionally, clear fields after adding the record
           clearFields(); // Method to clear form fields
            id_autoincrement(); // Re-initialize auto-increment for SalaryID

        } catch (SQLException e) {
            // Handle SQL exceptions
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error adding salary: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close the PreparedStatement and Connection
            try {
                if (pst != null) pst.close();
                if (con != null) con.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    } catch (Exception e) {
        // Handle any other exceptions
        JOptionPane.showMessageDialog(null, "Invalid input: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_AddActionPerformed

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        // id_autoincrement();

     try {
        // Retrieve form data
        java.util.Date utilDate = j_date.getDate(); // Get the date from JDateChooser
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime()); // Convert util.Date to sql.Date
        int salary = Integer.parseInt(txt_bsalary.getText()); // Get basic salary
        int allowance = Integer.parseInt(txt_allowance.getText()); // Get allowance
        int employeeId = Integer.parseInt(txt_employid.getText()); // Get EmployeeID
        int total = salary + allowance; // Calculate total (Salary + Allowance)

        int salaryId = Integer.parseInt(txt_salaryid.getText()); // Get the SalaryID for update (Assuming you have a SalaryID field)

        Connection con = null;
        PreparedStatement pst = null;

        try {
            con = MDBConnection.createConnection();
            String sql = "UPDATE Salary SET SalaryDate = ?, Salary = ?, Allowance = ?, EmployeeID = ?, Total = ? WHERE SalaryID = ?";
            pst = con.prepareStatement(sql);

            // Set the parameters for the update query
            pst.setDate(1, sqlDate);          // SalaryDate
            pst.setInt(2, salary);            // Salary
            pst.setInt(3, allowance);         // Allowance
            pst.setInt(4, employeeId);        // EmployeeID
            pst.setInt(5, total);             // Total
            pst.setInt(6, salaryId);          // SalaryID to update

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Salary record updated successfully!");

            clearFields();
            id_autoincrement();

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error updating salary: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (pst != null) pst.close();
            if (con != null) con.close();
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Invalid input: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed

       if (txt_salaryid.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Salary ID cannot be empty");
        return;
    }

    int salaryId = Integer.parseInt(txt_salaryid.getText()); // Get the SalaryID for deletion

    // Confirm deletion
    int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this salary record?", "Delete", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        Connection con = null;
        PreparedStatement pst = null;

        try {
            con = MDBConnection.createConnection();
            String sql = "DELETE FROM Salary WHERE SalaryID = ?";
            pst = con.prepareStatement(sql);

            // Set the SalaryID parameter
            pst.setInt(1, salaryId);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Salary record deleted successfully!");

            clearFields();
            id_autoincrement();

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error deleting salary: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            
        }
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_btn_DeleteActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        clearFields();
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_clearActionPerformed

    private void txt_salaryidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_salaryidActionPerformed

       int salaryid = Integer.parseInt(txt_salaryid.getText());
if (salaryid == 0) {
    JOptionPane.showMessageDialog(null, "Please enter the Salary ID to view details");
    return;
}

try {
    // Establish connection
    Connection conn = MDBConnection.createConnection();

    // SQL query to select salary details based on SalaryID
    String sql = "SELECT SalaryDate, Salary, Allowance,Total, EmployeeID FROM Salary WHERE SalaryID = ?";
    PreparedStatement pst = conn.prepareStatement(sql);
    pst.setInt(1, salaryid);

    // Execute query
    ResultSet rs = pst.executeQuery();

    // Check if a matching record was found
    if (rs.next()) {
        // Populate the fields with retrieved data
        j_date.setDate(rs.getDate("SalaryDate"));
        txt_bsalary.setText(rs.getString("Salary")); // Corrected column name
        txt_allowance.setText(String.valueOf(rs.getInt("Allowance")));
        txt_employid.setText(String.valueOf(rs.getInt("EmployeeID")));
        txt_total.setText(String.valueOf(rs.getInt("Total")));
    } else {
        JOptionPane.showMessageDialog(null, "Salary ID not found");
    }

    // Close connection
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error retrieving salary details: " + e.getMessage());
}
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_salaryidActionPerformed

    private void txt_bsalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bsalaryActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bsalaryActionPerformed

    private void txt_allowanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_allowanceActionPerformed

         int allowance =Integer.parseInt(txt_allowance.getText());
         int bs =Integer.parseInt(txt_bsalary.getText());
         int total = allowance + bs;
         txt_total.setText(String.valueOf(total));
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_allowanceActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false);
        VHrDashboard pm=new VHrDashboard();
        pm.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txt_employidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_employidActionPerformed
        
       if (txt_employid.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Employee ID cannot be empty");
        return;
    }

    int employeeId = Integer.parseInt(txt_employid.getText());
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    try {
        // Step 1: Create a connection to the database
        con = MDBConnection.createConnection();

        // Step 2: Query to fetch the salary and position based on EmployeeID
        String query = "SELECT Salary, Position, Allowance FROM Employee WHERE EmployeeID = ?";
        pst = con.prepareStatement(query);
        pst.setInt(1, employeeId);
        rs = pst.executeQuery();

        // Step 3: Display the salary and position if the employee exists
        if (rs.next()) {
            int salary = rs.getInt("Salary");
            String position = rs.getString("Position");
            int allowance = rs.getInt("Allowance");

            // Set the salary to txt_bsalary
            txt_bsalary.setText(String.valueOf(salary));

            // Set the position to txt_employname
            txt_employname.setText(position);
            txt_allowance.setText(String.valueOf(allowance));
            
        } else {
            JOptionPane.showMessageDialog(null, "Employee not found");
        }

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error fetching employee details: " + e.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (pst != null) pst.close();
            if (con != null) con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

        

/*if (employid == 0) {
    JOptionPane.showMessageDialog(null, "Please enter the product ID to view details");
    return;
}

try {
            try (Connection conn = MDBConnection.createConnection()) {
                String sql = "SELECT User_Name FROM useraccount WHERE User_ID = ?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setInt(1, employid);
                ResultSet rs = pst.executeQuery();
                
                if (rs.next()) {
                    txt_employname.setText(rs.getString("User_Name"));
                  
                    
                    
                    
                    
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Product ID not found");
                }       }
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error retrieving product details: " + e.getMessage());
}*/
        
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_employidActionPerformed

    private void txt_employnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_employnameActionPerformed
        int employeeId = Integer.parseInt(txt_employid.getText());
if (employeeId == 0) {
    JOptionPane.showMessageDialog(null, "Please enter the Employee ID to view details");
    return;
}

try {
    // Establish connection
    Connection conn = MDBConnection.createConnection();

    // SQL query to select employee name based on EmployeeID
    String sql = "SELECT EmployeeName FROM Employee WHERE EmployeeID = ?";
    PreparedStatement pst = conn.prepareStatement(sql);
    pst.setInt(1, employeeId);

    // Execute query
    ResultSet rs = pst.executeQuery();

    // Check if a matching record was found
    if (rs.next()) {
        // Set the employee name in the corresponding text field
        txt_employname.setText(rs.getString("EmployeeName"));
    } else {
        JOptionPane.showMessageDialog(null, "Employee ID not found");
    }

    // Close connection
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error retrieving employee name: " + e.getMessage());
}

        
        


    }//GEN-LAST:event_txt_employnameActionPerformed

    private void txt_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VSalary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Update;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private com.toedter.calendar.JDateChooser j_date;
    private javax.swing.JTextField txt_allowance;
    private javax.swing.JTextField txt_bsalary;
    private javax.swing.JTextField txt_employid;
    private javax.swing.JTextField txt_employname;
    private javax.swing.JLabel txt_membername;
    private javax.swing.JTextField txt_salaryid;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables
}
